{"version":3,"file":"static/js/806.ca60bd09.chunk.js","mappings":"oPAEaA,EAAOC,EAAAA,GAAAA,GAAH,wKACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKDC,EAAOJ,EAAAA,GAAAA,GAAH,iFACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACT,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEDE,EAAWL,EAAAA,GAAAA,IAAH,6HACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,MAAnB,IAGCC,EAAOd,EAAAA,GAAAA,IAAH,oGACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,IAECC,EAAkBhB,EAAAA,GAAAA,IAAH,0CAGfiB,EAAUjB,EAAAA,GAAAA,IAAH,oGACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUQ,CAAtB,IACL,SAAAjB,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,IAECI,EAAUnB,EAAAA,GAAAA,EAAH,iJACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,I,6BCFZ,EA9BgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeN,GAASO,KAAKH,EAC9B,GAAE,CAACJ,IACCG,GAIH,SAACK,EAAA,EAAD,UACGL,EAAQM,QAAQC,OAAS,GACxB,SAAC/B,EAAD,UACGwB,EAAQM,QAAQE,KAAI,SAAAC,GAAI,OACvB,UAAC5B,EAAD,YACE,UAACY,EAAD,YACE,SAACX,EAAD,uBACA,SAACS,EAAD,UAAOkB,EAAKC,aAEd,SAAChB,EAAD,UAAUe,EAAKE,YALNF,EAAKG,GADO,OAW3B,SAAChB,EAAD,yDAjBG,IAqBV,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin-top: ${p => p.theme.space[5]}px;\r\n  display: flex;\r\n  list-style: none;\r\n  margin: ${p => p.theme.space[0]}px;\r\n  padding: ${p => p.theme.space[0]}px;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin-left: ${p => p.theme.space[5]}px;\r\n  gap: ${p => p.theme.space[3]}px;\r\n  padding: ${p => p.theme.space[2]}px;\r\n`;\r\nexport const SubTitle = styled.div`\r\n  margin-bottom: ${p => p.theme.space[2]}px;\r\n  font-family: ${p => p.theme.fonts.monospace};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.ml};\r\n  color: ${p => p.theme.colors.tomato};\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  font-family: ${p => p.theme.fonts.monospace};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.ml};\r\n  color: ${p => p.theme.colors.text};\r\n`;\r\nexport const WrapperSubTitle = styled.div`\r\n  display: flex;\r\n`;\r\nexport const Content = styled.div`\r\n  font-family: ${p => p.theme.fonts.monospace};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.m};\r\n  color: ${p => p.theme.colors.text};\r\n`;\r\nexport const Message = styled.p`\r\n  margin-top: ${p => p.theme.space[5]}px;\r\n  margin-left: ${p => p.theme.space[5]}px;\r\n  font-family: ${p => p.theme.fonts.monospace};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.ml};\r\n  color: ${p => p.theme.colors.text};\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { Box } from '../Box';\r\nimport {\r\n  List,\r\n  Item,\r\n  SubTitle,\r\n  Text,\r\n  WrapperSubTitle,\r\n  Content,\r\n  Message,\r\n} from './Reviews.styled';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as API from '../../services/api';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState(null);\r\n  useEffect(() => {\r\n    API.getReviews(movieId).then(setReviews);\r\n  }, [movieId]);\r\n  if (!reviews) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Box>\r\n      {reviews.results.length > 0 ? (\r\n        <List>\r\n          {reviews.results.map(data => (\r\n            <Item key={data.id}>\r\n              <WrapperSubTitle>\r\n                <SubTitle>Author:</SubTitle>\r\n                <Text>{data.author}</Text>\r\n              </WrapperSubTitle>\r\n              <Content>{data.content}</Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Message>We don't have any reviews for this movie</Message>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default Reviews;\r\n"],"names":["List","styled","p","theme","space","Item","SubTitle","fonts","monospace","fontWeights","bold","fontSizes","ml","colors","tomato","Text","text","WrapperSubTitle","Content","m","Message","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","Box","results","length","map","data","author","content","id"],"sourceRoot":""}