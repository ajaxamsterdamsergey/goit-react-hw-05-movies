{"version":3,"file":"static/js/806.ca60bd09.chunk.js","mappings":"oPAEaA,EAAOC,EAAAA,GAAAA,GAAH,wKACD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKDC,EAAOJ,EAAAA,GAAAA,GAAH,iFACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACT,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEDE,EAAWL,EAAAA,GAAAA,IAAH,6HACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,MAAnB,IAGCC,EAAOd,EAAAA,GAAAA,IAAH,oGACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,IAECC,EAAkBhB,EAAAA,GAAAA,IAAH,0CAGfiB,EAAUjB,EAAAA,GAAAA,IAAH,oGACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUQ,CAAtB,IACL,SAAAjB,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,IAECI,EAAUnB,EAAAA,GAAAA,EAAH,iJACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,SAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAUC,EAAtB,IACL,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,I,6BCFZ,EA9BgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeN,GAASO,KAAKH,EAC9B,GAAE,CAACJ,IACCG,GAIH,SAACK,EAAA,EAAD,UACGL,EAAQM,QAAQC,OAAS,GACxB,SAAC/B,EAAD,UACGwB,EAAQM,QAAQE,KAAI,SAAAC,GAAI,OACvB,UAAC5B,EAAD,YACE,UAACY,EAAD,YACE,SAACX,EAAD,uBACA,SAACS,EAAD,UAAOkB,EAAKC,aAEd,SAAChB,EAAD,UAAUe,EAAKE,YALNF,EAAKG,GADO,OAW3B,SAAChB,EAAD,yDAjBG,IAqBV,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n  display: flex;\n  list-style: none;\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n  margin: 0 auto;\n  flex-direction: column;\n`;\n\nexport const Item = styled.li`\n  margin-left: ${p => p.theme.space[5]}px;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[2]}px;\n`;\nexport const SubTitle = styled.div`\n  margin-bottom: ${p => p.theme.space[2]}px;\n  font-family: ${p => p.theme.fonts.monospace};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.ml};\n  color: ${p => p.theme.colors.tomato};\n`;\n\nexport const Text = styled.div`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.ml};\n  color: ${p => p.theme.colors.text};\n`;\nexport const WrapperSubTitle = styled.div`\n  display: flex;\n`;\nexport const Content = styled.div`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.text};\n`;\nexport const Message = styled.p`\n  margin-top: ${p => p.theme.space[5]}px;\n  margin-left: ${p => p.theme.space[5]}px;\n  font-family: ${p => p.theme.fonts.monospace};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.ml};\n  color: ${p => p.theme.colors.text};\n`;\n","import { useState, useEffect } from 'react';\nimport { Box } from '../Box';\nimport {\n  List,\n  Item,\n  SubTitle,\n  Text,\n  WrapperSubTitle,\n  Content,\n  Message,\n} from './Reviews.styled';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    API.getReviews(movieId).then(setReviews);\n  }, [movieId]);\n  if (!reviews) {\n    return null;\n  }\n  return (\n    <Box>\n      {reviews.results.length > 0 ? (\n        <List>\n          {reviews.results.map(data => (\n            <Item key={data.id}>\n              <WrapperSubTitle>\n                <SubTitle>Author:</SubTitle>\n                <Text>{data.author}</Text>\n              </WrapperSubTitle>\n              <Content>{data.content}</Content>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Message>We don't have any reviews for this movie</Message>\n      )}\n    </Box>\n  );\n};\nexport default Reviews;\n"],"names":["List","styled","p","theme","space","Item","SubTitle","fonts","monospace","fontWeights","bold","fontSizes","ml","colors","tomato","Text","text","WrapperSubTitle","Content","m","Message","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","Box","results","length","map","data","author","content","id"],"sourceRoot":""}